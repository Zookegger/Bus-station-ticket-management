@page
@model ForgotPasswordModel
@{
    ViewData["Title"] = "Forgot your password?";
}

<div class="container py-5">
    <div class="card shadow mx-auto rounded-4 border-0" style="max-width: 500px;">
        <div class="card-header bg-primary text-white text-center py-3 rounded-top-4">
            <h1 class="h3 mb-0">@ViewData["Title"]</h1>
        </div>

        <div class="card-body p-4">
            <div class="text-center mb-4">
                <i class="bi bi-key-fill text-primary" style="font-size: 2.5rem;"></i>
                <p class="text-muted mt-2">Enter your email address and we'll send you a link to reset your password.</p>
            </div>
            <div class="mb-4 w-100">
                <span id="emailStatus" class="d-block w-100"></span>
            </div>
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <div class="form-floating mb-4">
                    <input asp-for="Input.Email" class="form-control form-control-lg" type="email" autocomplete="email" aria-required="true"
                        placeholder="name@example.com" />
                    <label asp-for="Input.Email" class="form-label">Email Address</label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="d-grid gap-3 mt-4">
                    <button type="submit" id="sendResetLinkButton" class="btn btn-primary btn-lg rounded-pill hvr-icon-buzz-out" disabled>
                        <i class="fa-solid fa-envelope me-2 hvr-icon"></i>Send Reset Link
                    </button>
                    <a role="button" class="btn btn-outline-secondary rounded-pill hvr-icon-back" asp-page="./Login">
                        <i class="fa-solid fa-arrow-left me-2 hvr-icon"></i>Return to Login
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />    

    <script>
        $(document).ready(function() {
            $('#Input_Email').on('change', function() {
                if ($(this).val() == '') {
                    $('#sendResetLinkButton').prop('disabled', true);
                }
            });

            $('#Input_Email').on('change', debounce(function() {
                var email = $(this).val();
                if (email) {
                    $.ajax({
                        url: document.location.origin + '/api/account/get-user-by-email?email=' + email,
                        type: 'GET',
                        success: function(response) {
                            if (response.success) {
                                if (response.data.message == 'User not found') {
                                    $('#sendResetLinkButton').prop('disabled', true);
                                    $('#emailStatus').addClass('alert alert-warning');
                                    $('#emailStatus').text('User not found');
                                }
                                else {
                                    $('#sendResetLinkButton').prop('disabled', false);
                                    $('#emailStatus').removeClass('alert alert-warning');
                                    $('#emailStatus').text('');
                                }
                            }
                            else {
                                $('#sendResetLinkButton').prop('disabled', true);
                                $('#emailStatus').addClass('alert alert-warning');
                                $('#emailStatus').text('User not found');
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error("Error fetching user data:", error);
                        }
                    });
                }
            }, 1000));


            function debounce(func, wait) {
                let timeout;
                return function (...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func.apply(this, args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }
        });
    </script>
}
