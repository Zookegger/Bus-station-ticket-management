@model X.PagedList.IPagedList<Bus_Station_Ticket_Management.Models.Vehicle>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<head>
    <link rel="stylesheet" href="~/css/Vehicle/Index.css">
</head>

<h1>Vehicle List</h1>

<a asp-action="Create" class="btn btn-primary mb-3" role="button">Add New Vehicle</a>

<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" class="form-control" value="@ViewBag.SearchString" name="searchString"
            placeholder="Search for vehicles..." />
        <button type="submit" class="btn btn-outline-primary">Search <i class="fa fa-search"
                style="font-size: 18px"></i></button>
    </div>
    <div class="input-group">
        <select name="sortBy" id="sortBy" onchange="this.form.submit()">
            <option value="" disabled>Sort By...</option>
            <optgroup label="Sort by Name">
                <option value="name_asc" selected="@(ViewBag.SortBy == "name_asc" ? "selected" : null)">
                    Name Ascending ↑
                </option>
                <option value="name_desc" selected="@(ViewBag.SortBy == "name_desc" ? "selected" : null)">
                    Name Descending ↓
                </option>
            </optgroup>
            <optgroup label="Sort by License Plate">
                <option value="licenseplate_asc" selected="@(ViewBag.SortBy == "licenseplate_asc" ? "selected" : null)">
                    License Plate Ascending ↑
                </option>
                <option value="licenseplate_desc"
                    selected="@(ViewBag.SortBy == "licenseplate_desc" ? "selected" : null)">
                    License Plate Descending ↓
                </option>
            </optgroup>
        </select>
    </div>
</form>

<table id="VehicleTable" class="table table-hover table-striped pb-3">
    <thead>
        <tr>
            <th>Name</th>
            <th>License Plate</th>
            <th>Status</th>
            <th>Vehicle Type</th>
            <th style="width: 30px">Actions</th>
        </tr>
    </thead>
    <tbody class="table-group=divider">
        @foreach (var item in Model)
        {
            <tr class="clickable-row" data-href="@Url.Action("Details", new { id = item.Id })">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LicensePlate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VehicleType.Name)
                </td>
                <td class="d-flex justify-content-end">
                    <div class="btn-group ">
                        <a role="button" class="btn btn-secondary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a role="button" class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<nav aria-label="Page navigation example" style="display: flex; justify-content: center;">
    @if (Model.Any())
    {
        @Html.PagedListPager(Model, pageNumber => Url.Action("Index", new { page = pageNumber, searchString =
        ViewBag.SearchString }),
        new PagedListRenderOptions
        {
            UlElementClasses = new[] { "pagination", "justify-content-center" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            ActiveLiElementClass = "active",
            LinkToPreviousPageFormat = "&laquo;",
            LinkToNextPageFormat = "&raquo;"
        })
        }
</nav>

@section Scripts {
    <script src="~/js/table.js"></script>
}