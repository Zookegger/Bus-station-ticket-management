@model IEnumerable<Bus_Station_Ticket_Management.Models.Coupon>

@{
    ViewData["Title"] = "Coupon List";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<head>
    <link rel="stylesheet" href="~/css/Index.css">
</head>

<h1 class="mb-4 text-primary fw-bold">@ViewData["Title"]</h1>

<a asp-action="Create" class="btn btn-primary mb-3" role="button">Create New</a>

<div class="row g-2 mb-3">
    <div class="col-md-3">
        <select id="isActive" name="isActive" class="form-select">
            <option value="" selected>All Status</option>
            <option value="Active">Active</option>
            <option value="Inactive">Inactive</option>
        </select>
    </div>
</div>

@if (Model.Count() == 0) {
    <div class="alert alert-info">
        No coupons found.
    </div>
}
else {
    <div class="table-responsive mb-3 shadow rounded">
        <table id="DataTable" 
        class="table table-hover table-striped align-middle mb-0" 
        data-details-url="/Admin/Coupons/DetailsPartial"
        data-table-name="Coupons"
        data-table-title="Coupons">
        <thead style="position: sticky; top: 0">
            <tr>
                <th style="min-width: 200px;">Coupon Code</th>
                <th style="min-width: 200px;">Type</th>
                <th style="min-width: 200px;">Amount</th>
                <th style="min-width: 200px;">Start Period</th>
                <th style="min-width: 200px;">End Period</th>
                <th>Active</th>
                <th style="width: 30px">
                    Actions
                </th>
            </tr>
        </thead>
        <tbody class="table-group=divider">
            @foreach (var item in Model)
            {
                <tr class="clickable-row" data-id="@item.Id" style="cursor: pointer;">
                    <td>
                        @Html.DisplayFor(modelItem => item.CouponString)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DiscountType)
                    </td>
                    <td>
                        @if (item.DiscountType.ToString() == "Percentage"){
                            @($"{Math.Round(item.DiscountAmount)}%")
                        } else {
                            @Html.DisplayFor(modelItem => item.DiscountAmount)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartPeriod)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndPeriod)
                    </td>
                    <td>
                        @(item.IsActive ? "Active" : "Inactive")
                    </td>
                    <td class="action-buttons" onclick="event.stopPropagation()" style="min-width: 120px; max-width: 120px;">
                        <!-- Dropdown Buttons (Hidden by default) -->
                        <div class="dropdown dropdown-buttons" style="display:none;" data-bs-theme="dark">
                            <button class="btn btn-outline-secondary dropdown-toggle px-2 py-1" type="button"
                                data-bs-toggle="dropdown" data-tippy-content="More Actions">
                                <i class="fa fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end shadow">
                                <li>
                                    <a class="dropdown-item d-flex align-items-center gap-2" asp-action="Edit"
                                        asp-route-id="@item.Id">
                                        <i class="fa fa-edit text-primary"></i> Edit
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item d-flex align-items-center gap-2" asp-action="Delete"
                                        asp-route-id="@item.Id">
                                        <i class="fa fa-trash text-danger"></i> Delete
                                    </a>
                                </li>
                            </ul>
                        </div>

                        <!-- Simple Buttons (Visible by default on small tables) -->
                        <div class="btn-group simple-buttons" role="group" style="display:none;">
                            <a role="button" class="btn btn-secondary rounded-start" asp-action="Edit"
                                asp-route-id="@item.Id">
                                <i class="fa fa-edit"></i>
                            </a>
                            <a role="button" class="btn btn-danger rounded-end" asp-action="Delete" asp-route-id="@item.Id">
                                <i class="fa fa-trash"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
}

<div class="offcanvas offcanvas-end" tabindex="-1" id="detailsOffcanvas" aria-labelledby="detailsOffcanvasLabel" style="width: 40%; min-width: 500px;">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title text-primary fs-4" id="detailsOffcanvasLabel"><i class="fas fa-info-circle me-2"></i>Coupon Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body px-0 py-0 card" id="detailsOffcanvasBody">
        <div class="text-center p-3">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>

    </div>
</div>

@section Styles{
    <link rel="stylesheet" href="~/css/Index.css">
}

@section Scripts {
    <script src="~/js/table.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const dataTable = $("#DataTable").DataTable();

            $('#isActive').on('change', function() {
                const selectedStatus = $(this).val();
                const statusColumnIndex = 5;

                if (selectedStatus) {
                    dataTable.column(statusColumnIndex).search('^' + selectedStatus + '$', true, false).draw();
                } else {
                    dataTable.column(statusColumnIndex).search('').draw();
                }
            });
        });
    </script>
}