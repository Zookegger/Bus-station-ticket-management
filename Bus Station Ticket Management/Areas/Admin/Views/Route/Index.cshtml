@model X.PagedList.IPagedList<Bus_Station_Ticket_Management.Models.Routes>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Route List";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}


<head>
    <link rel="stylesheet" href="~/css/Index.css">
</head>

<h1>Route List</h1>

<a asp-action="Create" class="btn btn-primary mb-3" role="button">Create New Route</a>

<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" class="form-control" value="@ViewBag.SearchString" name="searchString"
            placeholder="Search for routes... (Location 1 -> Location 2)">
        <button type="submit" class="btn btn-outline-primary">Search <i class="fa fa-search"
                style="font-size: 18px"></i></button>
    </div>
    <div class="input-group mt-3">
        <select class="form-control" name="sortBy" id="sortBy" onchange="this.form.submit()">
            <option value="" disabled selected>Sort By ...</option>
            <optgroup label="Sort by Departure">
                <option value="departure_asc" selected="@(ViewBag.SortBy == "departure_asc" ? "selected" : null)">
                    Departure Ascending ↑
                </option>
                <option value="departure_desc" selected="@(ViewBag.SortBy == "departure_desc" ? "selected" : null)">
                    Departure Descending ↓
                </option>
            </optgroup>
            <optgroup label="Sort by Destination">
                <option value="destination_asc" selected="@(ViewBag.SortBy == "destination_asc" ? "selected" : null)">
                    Destination Ascending ↑
                </option>
                <option value="destination_desc" selected="@(ViewBag.SortBy == "destination_desc" ? "selected" : null)">
                    Destination Descending ↓
                </option>
            </optgroup>
            <optgroup label="Sort by Price">
                <option value="price_asc" selected="@(ViewBag.SortBy == "price_asc" ? "selected" : null)">
                    Price Ascending ↑
                </option>
                <option value="price_desc" selected="@(ViewBag.SortBy == "price_desc" ? "selected" : null)">
                    Price Descending ↓
                </option>
            </optgroup>
        </select>
    </div>
</form>

<div class="table-responsive mb-3 shadow rounded">
    <table id="RouteTable" class="table table-hover table-striped align-middle mb-0">
        <thead>
            <tr>
                <th>Departure</th>
                <th>Destination</th>
                <th>Price</th>
                <th style="width: 30px">Actions</th>
            </tr>
        </thead>
        <tbody class="table-group=divider">
            @foreach (var item in Model)
            {
                <tr class="clickable-row" data-href="@Url.Action("Details", new { id = item.Id })">
                    <td>
                        @Html.DisplayFor(modelItem => item.StartLocation.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DestinationLocation.Name)
                    </td>
                    <td>
                        $@Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        <div class="btn-group" role="group">
                            <a role="button" class="btn btn-secondary rounded-start" asp-action="Edit" asp-route-id="@item.Id">
                                <i class="fa fa-edit"></i> 
                                <span>Edit</span>
                            </a>
                            <a role="button" class="btn btn-danger rounded-end" asp-action="Delete" asp-route-id="@item.Id">
                                <i class="fa fa-trash"></i> 
                                <span>Delete</span>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<nav aria-label="Page navigation example" style="display: flex; justify-content: center;">
    @if (Model.Any())
    {
        @Html.PagedListPager(Model, pageNumber => Url.Action("Index", new { page = pageNumber, searchString =
        ViewBag.SearchString }),
        new PagedListRenderOptions
        {
            UlElementClasses = new[] { "pagination", "justify-content-center" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            ActiveLiElementClass = "active",
            LinkToPreviousPageFormat = "&laquo;",
            LinkToNextPageFormat = "&raquo;"
        })
        }
</nav>

@section Scripts {
    <script src="~/js/table.js"></script>
}
