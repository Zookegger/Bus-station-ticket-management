@model IEnumerable<Bus_Station_Ticket_Management.Models.Ticket>

@{
    ViewData["Title"] = "Index";
}

<head>
    <link rel="stylesheet" href="~/css/Index.css">
</head>

<h1 class="text-success fw-bold mb-4">Tickets</h1>

<div class="form-group input-group mt-3 gap-2" role="group">
    <div class="d-flex gap-2 align-items-center">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="IsPaid" name="IsPaid" value="true"/>
            <label class="form-check-label" for="IsPaid">Is Paid</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="IsCanceled" name="IsCanceled" value="true"/>
            <label class="form-check-label" for="IsCanceled">Is Canceled</label>
        </div>
    </div>
</div>

<div class="table-responsive mb-3 shadow rounded">
    <table id="DataTable" 
        class="table table-striped table-hover align-middle mb-0"
        data-details-url="/Admin/Tickets/DetailsPartial" data-table-name="Tickets" data-table-title="Ticket">
        <thead style="position: sticky; top: 0">
            <tr>
                <th>Customer Name</th>
                <th>Customer Email</th>
                <th style="min-width: 120px;">Customer Phone</th>
                <th style="min-width: 200px;">Trip</th>
                <th>Seat</th>
                <th>Booking Date</th>
                <th>Is Paid?</th>
                <th>Is Canceled?</th>
                <th>Cancelation Time</th>
                <th style="min-width: 56px; max-width: 56px; text-align: right;">Actions</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="clickable-row" data-id="@item.Id" style="cursor: pointer;">
                    <td>
                        @((item.User != null) ? Html.DisplayFor(modelItem => item.User.FullName) : Html.DisplayFor(modelItem => item.GuestName))
                    </td>
                    <td>
                        @((item.User != null) ? Html.DisplayFor(modelItem => item.User.Email) : Html.DisplayFor(modelItem => item.GuestEmail))
                    </td>
                    <td>
                        @((item.User != null) ? Html.DisplayFor(modelItem => item.User.PhoneNumber) : Html.DisplayFor(modelItem => item.GuestPhone))
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Trip.Route.StartLocation.Name) ➞
                        @Html.DisplayFor(modelItem => item.Trip.Route.DestinationLocation.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Seat.Number)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BookingDate)
                    </td>
                    <td data-search="@item.IsPaid" data-value="@item.IsPaid">
                        @((item.IsPaid) ? "✔" : "❌")
                    </td>
                    <td data-search="@item.IsCanceled" data-value="@item.IsCanceled">
                        @((item.IsCanceled) ? "✔" : "❌")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CancelationTime)
                    </td>
                    <td class="action-buttons" onclick="event.stopPropagation()" style="min-width: 90px; max-width: 90px; width: 90px !important;">
                        <!-- Dropdown Buttons (Hidden by default) -->
                        <div class="dropdown dropdown-buttons" data-bs-display="static" data-bs-theme="dark" style="display:none;">
                            <button class="btn btn-outline-secondary dropdown-toggle px-2 py-1" type="button"
                                data-bs-toggle="dropdown" data-tippy-content="More Actions">
                                <i class="fa fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end shadow">
                                <li>
                                    @if (!item.IsCanceled) {
                                        <a class="dropdown-item d-flex align-items-center gap-2" asp-action="Edit"
                                            asp-route-id="@item.Id">
                                            <i class="fa fa-edit text-primary"></i> Edit
                                        </a>
                                    }
                                </li>
                                <li>
                                    <a class="dropdown-item d-flex align-items-center gap-2" asp-action="Delete"
                                        asp-route-id="@item.Id">
                                        <i class="fa fa-trash text-danger"></i> Delete
                                    </a>
                                </li>
                            </ul>
                        </div>

                        <!-- Simple Buttons (Visible by default on small tables) -->
                        <div class="btn-group simple-buttons" role="group" style="display:none; min-width: 90px;">
                            <a role="button" class="btn btn-secondary rounded-start" asp-action="Edit" asp-route-id="@item.Id" data-tippy-content="Edit Content">
                                <i class="fa fa-edit"></i>
                            </a>
                            <a role="button" class="btn btn-danger rounded-end" asp-action="Delete" asp-route-id="@item.Id" data-tippy-content="Delete Content">
                                <i class="fa fa-trash"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="detailsOffcanvas" aria-labelledby="detailsOffcanvasLabel"
    style="width: 40%; min-width: 500px;">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title text-primary fs-1 fw-bold" id="detailsOffcanvasLabel">Ticket Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body px-0 py-0 card" id="detailsOffcanvasBody">

    </div>
</div>

@section Styles{
    <link rel="stylesheet" href="~/css/Index.css">
}

@section Scripts {
    <script src="~/js/table.js"></script>
    <script src="~/js/initOSM.js"></script>
    <script>
        $('.clickable-row').on('click', function () {
            var routeId = $(this).data('id');
            
            console.log(routeId);
            $.ajax({
                url: '/Admin/Tickets/DetailsPartial?id=' + routeId,
                method: 'GET',
                success: function (data) {
                    try {
                        $('#detailsOffcanvasBody').html(data);

                        setTimeout(async function() {
                            var startLatitude = parseFloat($('#ticketDetailsData').data('start-latitude'));
                            var startLongitude = parseFloat($('#ticketDetailsData').data('start-longitude'));
                            var endLatitude = parseFloat($('#ticketDetailsData').data('end-latitude'));
                            var endLongitude = parseFloat($('#ticketDetailsData').data('end-longitude'));
                            var startName = $('#ticketDetailsData').data('start-name');
                            var endName = $('#ticketDetailsData').data('end-name');

                            await initializeMap(startLatitude, startLongitude, startName, false);
                            const { startLocation, endLocation } = await addRouteAndTime(startLatitude, startLongitude, endLatitude, endLongitude);
                            
                            if (startLocation && endLocation) {
                                $('#startAddress').text(startLocation.display_name);
                                console.log($('#startAddress').text);
                                $('#endAddress').text(endLocation.display_name);
                                console.log($('#endAddress').text);
                            } else {
                                console.warn(startLocation);
                                console.warn(endLocation);
                            }
                        }, 100);
                    } catch (error) {
                        console.error(error);
                    }
                }
            });
        });
        
        document.addEventListener("DOMContentLoaded", function () {
            const dataTable = $("#DataTable").DataTable();
            $('#filterByType').on('change', function() {
                const selectedType = $(this).val();
                const typeColumnIndex = 3;
                
                console.log(selectedType);

                if (selectedType) {
                    dataTable.column(typeColumnIndex).search('^' + selectedType + '$', true, false).draw();
                } else {
                    dataTable.column(typeColumnIndex).search('').draw();
                }
            });

            function ticketStatusCheck() {

                $('#IsCanceled').on('change', function (e) {
                    const IsCanceled = $('#IsCanceled').is(':checked');
                    console.log(IsCanceled);
                    if (IsCanceled) {
                        dataTable.column(7).search('^True$', true, false).draw();
                    } else {
                        dataTable.column(7).search('').draw();
                    }
                });

                $('#IsPaid').on('change', function (e) {
                    const isPaid = $('#IsPaid').is(':checked');
                    console.log(isPaid);
                    if (isPaid) {
                        dataTable.column(6).search('^True$', true, false).draw();
                    } else {
                        dataTable.column(6).search('').draw();
                    }
                });
            }

            $('#filterByStatus').on('valuechange', function() {
                const selectedStatus = $(this).val();
                const statusColumnIndex = 2;
                
                console.log(selectedStatus);

                if (selectedStatus) {
                    dataTable.column(statusColumnIndex).search('^' + selectedStatus + '$', true, false).draw();
                } else {
                    dataTable.column(statusColumnIndex).search('').draw();
                }
            });
            ticketStatusCheck();
        });
    </script>
}