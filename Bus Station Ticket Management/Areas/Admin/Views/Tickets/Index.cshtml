@model X.PagedList.IPagedList<Bus_Station_Ticket_Management.Models.Ticket>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-success fw-bold mb-4">Tickets</h1>

<form asp-action="Index" method="get" class="mb-3" role="group">
    <div class="form-group input-group" role="group">
        <input type="text" class="form-control" value="@ViewBag.SearchString" name="searchString"
            placeholder="Search for tickets..." />
        <button type="submit" class="btn btn-outline-primary">Search <i class="fa fa-search"
                style="font-size: 18px"></i></button>
    </div>
    <div class="form-group input-group mt-3 gap-2" role="group">
        <select class="form-control" name="sortBy" id="sortBy" onchange="this.form.submit()">
            <option value="" disabled selected=@(ViewBag.SortBy == null ? "selected" : null)>Sort By ...</option>

            <optgroup label="Sort by Customer">
                <option value="customer_asc" selected=@(ViewBag.SortBy == "customer_asc" ? "selected" : null)>Customer Ascending
                    ↑</option>
                <option value="customer_desc" selected=@(ViewBag.SortBy == "customer_desc" ? "selected" : null)>Customer
                    Descending ↓</option>
            </optgroup>

            <optgroup label="Sort by Start Location">
                <option value="trip_StartLocation_asc" selected=@(ViewBag.SortBy == "trip_StartLocation_asc" ? "selected" :
                    null)> Start Location Ascending ↑</option>
                <option value="trip_StartLocation_desc" selected=@(ViewBag.SortBy == "trip_StartLocation_desc" ? "selected" : null)>Start Location Descending ↓</option>
            </optgroup>

            <optgroup label="Sort by Destination">
                <option value="trip_DestinationLocation_asc" selected=@(ViewBag.SortBy == "trip_DestinationLocation_asc" ? "selected" : null)> Destination Ascending ↑</option>
                <option value="trip_DestinationLocation_desc" selected=@(ViewBag.SortBy == "trip_DestinationLocation_desc" ? "selected" : null)> Destination Descending ↓</option>
            </optgroup>

            <optgroup label="Sort by Booking Date">
                <option value="bookingDate_asc" selected=@(ViewBag.SortBy == "bookingDate_asc" ? "selected" : null)>Booking Date Ascending ↑</option>
                <option value="bookingDate_desc" selected=@(ViewBag.SortBy == "bookingDate_desc" ? "selected" : null)>Booking Date Descending ↓</option>
            </optgroup>

            <optgroup label="Sort by Cancelation Time">
                <option value="cancelationTime_asc" selected=@(ViewBag.SortBy == "cancelationTime_asc" ? "selected" : null)> Cancelation Time Ascending ↑</option>
                <option value="cancelationTime_desc" selected=@(ViewBag.SortBy == "cancelationTime_desc" ? "selected" : null)> Cancelation Time Descending ↓</option>
            </optgroup>
        </select>

        <div class="d-flex gap-2 align-items-center">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="IsPaid" name="IsPaid" value="true"
                    @(ViewBag.IsPaid != null && (bool)ViewBag.IsPaid ? "checked" : "") onchange="this.form.submit()" />
                <label class="form-check-label" for="IsPaid">
                    Is Paid
                </label>
            </div>
            <input type="hidden" name="IsPaid" value="false" />

            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="IsCanceled" name="IsCanceled" value="true"
                    @(ViewBag.IsCanceled != null && (bool)ViewBag.IsCanceled ? "checked" : "") onchange="this.form.submit()" />
                <label class="form-check-label" for="IsCanceled">
                    Is Canceled
                </label>
            </div>
            <input type="hidden" name="IsCanceled" value="false" />
        </div>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th>Customer</th>
                <th style="min-width: 200px;">Trip</th>
                <th>Seat</th>
                <th>Booking Date</th>
                <th>Is Paid?</th>
                <th>Is Canceled?</th>
                <th>Cancelation Time</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="clickable-row" data-href="@Url.Action("Details", new { id = item.Id })">
                    <td>
                        @Html.DisplayFor(modelItem => item.User.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Trip.Route.StartLocation.Name) ➞
                        @Html.DisplayFor(modelItem => item.Trip.Route.DestinationLocation.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Seat.Number)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BookingDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsPaid)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsCanceled)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CancelationTime)
                    </td>
                    <td>
                        <div class="btn-group" role="group">
                            <a role="button" class="btn btn-secondary rounded-start" asp-action="Edit"
                                asp-route-id="@item.Id">
                                <i class="fa fa-edit"></i> Edit
                            </a>
                            <a role="button" class="btn btn-danger rounded-end" asp-action="Delete" asp-route-id="@item.Id">
                                <i class="fa fa-trash"></i> Delete
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<nav aria-label="Page navigation example" class="d-flex justify-content-center mt-3">
    @if (Model.Any())
    {
        @Html.PagedListPager(Model, pageNumber => Url.Action("Index", new {
            page = pageNumber,
            searchString = ViewBag.SearchString,
            sortBy = ViewBag.SortBy,
            IsPaid = ViewBag.IsPaid,
            IsCanceled = ViewBag.IsCanceled
        }),
        new PagedListRenderOptions
        {
            UlElementClasses = new[] { "pagination", "justify-content-center" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            ActiveLiElementClass = "active",
            LinkToPreviousPageFormat = "&laquo;",
            LinkToNextPageFormat = "&raquo;"
        })
    }
</nav>

@section Scripts {
    <script src="~/js/table.js"></script>
}
