@model Bus_Station_Ticket_Management.Models.ApplicationUser

@{
    var roleName = (ViewBag.UserRoles as Dictionary<string, string>).TryGetValue(Model.Id, out var role)
                ? role
                : "No Role";

    string roleClass = roleName switch
    {
        "Admin" => "primary",
        "Manager" => "success",
        "Employee" => "info",
        "Conductor" => "warning",
        "Driver" => "danger",
        "Customer" => "secondary",
        _ => "secondary"
    };

}

<div class="card-body flex-1" id="applicationUserDetailsContent">
    <div class="d-flex align-items-center mb-4">
        <div class="flex-shrink-0">
            <div class="avatar avatar-xl bg-primary bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center">
                @{
                    var avatarPath = System.IO.Path.Combine(Directory.GetCurrentDirectory(), "wwwroot",
                    "images", "avatar", Model.Avatar ?? "");
                    var hasImage = Model.Avatar != null && System.IO.File.Exists(avatarPath);
                }
                @if (hasImage) {
                    <img id="avatar"
                        src="@(hasImage ? Url.Content("~/images/avatar/" + Model.Avatar) : "#")" alt="Avatar"
                        class="rounded-circle shadow"
                        style="width: 80px; height: 80px; object-fit: cover; display:@(hasImage ? "block" : "none");" />
                } else {
                    <i class="fas fa-user fa-2x text-primary"></i>
                }
            </div>
        </div>
        <div class="flex-grow-1 ms-3">
            <h4 class="mb-1">@Html.DisplayFor(model => model.FullName)</h4>
            <p class="text-muted mb-0">
                <i class="fas fa-envelope me-2"></i>@Html.DisplayFor(model => model.Email)
                <span class="badge bg-@roleClass ms-2">@roleName</span>
            </p>
        </div>
    </div>

    <div class="row g-3">
        <div class="col-md-6">
            <div class="card h-100 border-0 shadow">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title text-white my-2">
                        <i class="fas fa-info-circle me-2"></i>Personal Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex flex-column gap-3">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <i class="fas fa-calendar-alt text-primary me-2"></i>
                            </div>
                            <div class="flex-grow-1">
                                <small class="text-muted d-block">Date of Birth</small>
                                <span class="fw-medium">@Html.DisplayFor(model => model.DateOfBirth)</span>
                            </div>
                        </div>
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <i class="fas fa-map-marker-alt text-primary me-2"></i>
                            </div>
                            <div class="flex-grow-1">
                                <small class="text-muted d-block">Address</small>
                                <span class="fw-medium">@Html.DisplayFor(model => model.Address)</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card h-100 border-0 shadow">
                <div class="card-header bg-secondary text-white">
                    <h5 class="card-title text-white my-2">
                        <i class="fas fa-phone-alt me-2"></i>Contact Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex flex-column gap-3">
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <i class="fas fa-phone text-primary me-2"></i>
                            </div>
                            <div class="flex-grow-1">
                                <small class="text-muted d-block">Phone Number</small>
                                <span class="fw-medium">@Html.DisplayFor(model => model.PhoneNumber)</span>
                                @if (Model.PhoneNumberConfirmed)
                                {
                                    <span class="badge bg-success ms-2">
                                        <i class="fas fa-check-circle me-1"></i>Verified
                                    </span>
                                }
                            </div>
                        </div>
                        <div class="d-flex align-items-center">
                            <div class="flex-shrink-0">
                                <i class="fas fa-envelope text-primary me-2"></i>
                            </div>
                            <div class="flex-grow-1">
                                <small class="text-muted d-block">Email Status</small>
                                <span class="fw-medium">
                                    @if (Model.EmailConfirmed)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check-circle me-1"></i>Verified
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">
                                            <i class="fas fa-exclamation-circle me-1"></i>Unverified
                                        </span>
                                    }
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card-footer bg-transparent border-0 d-flex justify-content-between gap-2" role="group" aria-label="Button group">
    <a role="button" class="btn btn-primary btn-lg flex-grow-1" asp-action="Edit" asp-route-id="@Model?.Id">
        <i class="fas fa-edit me-2"></i>Edit Customer
    </a>
    <a role="button" class="btn btn-outline-secondary btn-lg flex-grow-1" data-bs-dismiss="offcanvas" aria-label="Close">
        <i class="fas fa-arrow-left me-2"></i>Back to List
    </a>
</div>

<style>
    .avatar {
        width: 80px;
        height: 80px;
    }
    
    .card-body .card {
        transition: transform 0.2s ease-in-out;
    }
    
    .card-body .card:hover {
        transform: translateY(-5px);
    }
    
    .badge {
        font-size: 0.8rem;
        padding: 0.5em 0.8em;
    }
</style>