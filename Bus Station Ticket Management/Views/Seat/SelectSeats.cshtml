@model Bus_Station_Ticket_Management.ViewModels.SelectSeatsViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/Seat/SelectSeats.css">

<div class="error">
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
        @* <script>
            setTimeout(function () {
                window.location.href = '@Url.Action("Tickets", "MyTickets")';
            }, 3000); // 3 seconds delay before redirect
        </script> *@
    }
</div>

<h1>Select your seats</h1>

<div class="container mt-4">
    <div class="row">
        <!-- Seat Map Section -->
        <div class="col-md-7">
            <div class="mb-3">
                <label class="form-label">Seat Information</label>
                <div class="seat-legend-box">
                    <span class="seat-legend booked">Booked</span>
                    <span class="seat-legend available">Available</span>
                    <span class="seat-legend selected">Selected</span>
                </div>
            </div>

            <form asp-action="BookSeats" method="post" id="seatForm">
                <input type="hidden" asp-for="TripId" />
                <input type="hidden" asp-for="VehicleId" />
                <!-- Hidden field to store selected seat IDs -->
                <input type="hidden" id="selectedSeatIds" name="selectedSeatIds" value="" />

                <div class="mb-3">
                    <label class="form-label">Total Ticket:</label>
                    <input type="number" name="numberOfTickets" id="numberOfTickets" value="1" class="form-control"
                        min="1" max="@Model.Seats.Count(s => s.IsAvailable)" required />
                </div>

                <div class="mb-3">
                    <div class="seat-map">
                        <h4>Seat Map</h4>
                        <div class="seat-grid d-flex justify-content-center">
                            @for (int floor = 1; floor <= Model.TotalFloors; floor++)
                            {
                                System.Diagnostics.Debug.WriteLine($"\nTotal Floors: {Model.TotalFloors}\n");
                                <div class="floor my-3">
                                    <h5>Flooring @floor</h5>
                                    @for (int row = 1; row <= Model.TotalRows; row++)
                                    {
                                        <div class="seat-row">
                                            @for (int col = 1; col <= Model.TotalColumns; col++)
                                            {
                                                var seat = Model.Seats.FirstOrDefault(s => s.Row == row && s.Column == col &&
                                                s.Floor == floor);
                                                System.Diagnostics.Debug.WriteLine($"\nSeat info: {seat}\n");

                                                if (seat != null)
                                                {
                                                    <div class="seat @(seat.IsAvailable ? "available" : "booked")"
                                                        data-seat-id="@seat.Id">
                                                        @seat.Number
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="seat empty"></div>
                                                }
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>

            </form>
        </div>

        <!-- Trip Information Section -->
        <div class="col-md-5" id="TripInfo">
            <h4 style="text-align: center;">Please review your information before purchasing.</h4>
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Trip Information</h5>
                    <p><strong>Departure Point:</strong> @Model.DepartureLocation</p>
                    <p><strong>Arrival Point:</strong> @Model.DestinationLocation</p>
                    <p><strong>Departure Time:</strong> @Model.DepartureTime.ToString("HH:mm dd/MM/yyyy")</p>
                    <p><strong>License Plate:</strong> @Model.LicensePlate</p>
                    <p><strong>Total Seats:</strong> <span id="selectedSeatCount">0</span> ghế</p>
                    <p><strong>Seat Number:</strong> <span id="selectedSeats"></span></p>
                    <p><strong>Total:</strong> <span id="totalPrice">0đ</span></p>
                </div>

                <hr>
                <div class="card-body">
                    <h5 class="card-title">User Information</h5>
                    @if (@Model.User != null && !User.Identity.IsAuthenticated)
                    {
                        <p><strong>Full Name: </strong> @Model.User.FullName</p>
                        <p><strong>Address: </strong> @Model.User.Address</p>
                        <p><strong>Email: </strong> @Model.User.Email</p>
                        <p><strong>Phone Number: </strong> @Model.User.PhoneNumber</p>
                    }
                    else
                    {
                        <div class="form-group">
                            <label for="guestName">Full Name</label>
                            <input type="text" id="guestName" name="guestName" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="guestEmail">Email</label>
                            <input type="email" id="guestEmail" name="guestEmail" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="guestPhone">Phone Number</label>
                            <input type="tel" id="guestPhone" name="guestPhone" class="form-control" required />
                        </div>
                    }
                </div>
                <form class="card-body" asp-action="ApplyCoupon" asp-controller="Coupons" method="post">
                    <h5 class="card-title">Coupon</h5>
                    <input type="hidden" name="tripId" value="@Model.TripId" />
                    <div class="input-group mb-2">
                        <input type="text" name="couponCode" class="form-control" placeholder="Enter Coupon Code" />
                        <button type="submit" class="btn btn-outline-primary">Apply</button>
                    </div>
                </form>
            </div>
            <button type="submit" class="btn btn-primary mt-3 w-100" form="seatForm">Purchase</button>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            const maxSeats = @Model.Seats.Count(s => s.IsAvailable);
            console.log("Max available seats: " + maxSeats);

            let selectedSeats = [];
            const pricePerSeat = @Model.Price;

            $('.seat.available').click(function () {
                const seatId = $(this).data('seat-id');
                const seatNumber = $(this).text().trim();
                const numTickets = parseInt($('#numberOfTickets').val());

                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                    selectedSeats = selectedSeats.filter(s => s.id !== seatId);
                } else if (selectedSeats.length < numTickets) {
                    $(this).addClass('selected');
                    selectedSeats.push({ id: seatId, number: seatNumber });
                } else {
                    alert('You have selected the maximum number of seats based on the ticket quantity!');
                    return;
                }

                // Update dynamic information
                $('#selectedSeatIds').val(selectedSeats.map(s => s.id).join(','));
                $('#selectedSeatCount').text(selectedSeats.length);
                $('#selectedSeats').text(selectedSeats.map(s => s.number).join(', '));
                const total = selectedSeats.length * pricePerSeat;
                $('#totalPrice').text(total.toLocaleString('vi-VN') + 'đ');
            });

            $('#numberOfTickets').change(function () {
                const numTickets = parseInt($(this).val());
                if (numTickets > maxSeats) {
                    alert('Ticket quantity exceeds available seats!');
                    $(this).val(maxSeats);
                }
                if (numTickets < selectedSeats.length) {
                    // Remove extra selected seats if ticket number decreases
                    selectedSeats = selectedSeats.slice(0, numTickets);
                    $('.seat').removeClass('selected');
                    selectedSeats.forEach(s => $(`.seat[data-seat-id="${s.id}"]`).addClass('selected'));
                }
                $('#selectedSeatIds').val(selectedSeats.map(s => s.id).join(','));
                $('#selectedSeatCount').text(selectedSeats.length);
                $('#selectedSeats').text(selectedSeats.map(s => s.number).join(', '));
                const total = selectedSeats.length * pricePerSeat;
                $('#totalPrice').text(total.toLocaleString('vi-VN') + 'đ');
            });
        });
    </script>
    <style>
        .seat-map {
            margin-bottom: 20px;
        }

        .seat-grid {
            max-width: 600px;
        }

        .seat-row {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
        }

        .seat {
            width: 50px;
            height: 50px;
            line-height: 50px;
            text-align: center;
            border: 1px solid #ccc;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
        }

        .seat.available {
            background-color: #b3e5fc;
            color: black;
        }

        .seat.booked {
            background-color: #bdbdbd;
            color: white;
            cursor: not-allowed;
        }

        .seat.selected {
            background-color: #ff9800;
            color: white;
        }

        .seat.empty {
            background-color: transparent;
            border: none;
        }

        .seat.aisle {
            background-color: transparent;
            border: none;
            width: 50px;
            height: 50px;
        }

        .seat-legend-box {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 20px;
            margin-top: 10px;
        }

        .seat-legend {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 14px;
        }

        .seat-legend.booked {
            background-color: #bdbdbd;
        }

        .seat-legend.available {
            background-color: #b3e5fc;
        }

        .seat-legend.selected {
            background-color: #ff9800;
        }

        .card {
            border: 1px solid #ddd;
            border-radius: 8px;
        }

        .card-title {
            font-size: 1.25rem;
            font-weight: bold;
        }

        .card-body p {
            margin-bottom: 0.5rem;
        }
    </style>
}
