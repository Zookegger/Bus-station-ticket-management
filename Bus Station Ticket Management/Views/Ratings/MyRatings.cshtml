@model IEnumerable<Bus_Station_Ticket_Management.Models.Rating>

@{
    ViewData["Title"] = "My Reviews & Ratings";
    ViewData["Layout"] = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Success!</strong> @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Error!</strong> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container-fluid px-3 px-md-4">
    <!-- Header Section -->
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4">
        <div>
            <h1 class="h2 mb-2 text-dark fw-bold d-flex align-items-center">
                <i class="fas fa-star text-warning me-3"></i>
                @ViewData["Title"]
            </h1>
            <p class="text-muted mb-0">Manage your trip reviews and share your travel experiences</p>
        </div>
    </div>

    <!-- Unrated Trips Alert -->
    <div id="unratedTripsAlert" class="alert alert-gradient-warning border-0 shadow-sm mb-4" style="display: none;">
        <div class="d-flex align-items-center">
            <div class="alert-icon me-3">
                <i class="fas fa-star-half-stroke fa-lg"></i>
            </div>
            <div class="flex-grow-1">
                <h6 class="alert-heading mb-1">Pending Reviews</h6>
                <p class="mb-0">You have completed trips waiting for your review. Share your experience to help other
                    travelers!</p>
            </div>
            <a class="btn btn-warning text-white fw-semibold ms-3" href="@Url.Action("Create", "Ratings")">
                <i class="fas fa-pen me-1"></i>
                Review Now
            </a>
        </div>
    </div>

    <!-- Empty State -->
    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <div class="empty-state">
                <i class="fas fa-star-o fa-4x text-muted mb-3"></i>
                <h3 class="text-muted mb-3">No Reviews Yet</h3>
                <p class="text-muted mb-4">Start sharing your travel experiences by rating your completed trips.</p>
                <a class="btn btn-primary btn-lg" href="@Url.Action("Create", "Ratings")">
                    <i class="fas fa-plus me-2"></i>
                    Write Your First Review
                </a>
            </div>
        </div>
    }
    else
    {
        <!-- Stats Overview -->
        <div class="row mb-4">
            <div class="col">
                <div class="d-block">
                    <i class="fas fa-star"></i>
                    <h3 class="mb-0">@Model.Count()</h3>
                    <p class="mb-0">Total Reviews</p>
                </div>
            </div>
            <div class="col">
                <div class="stats-icon">
                    <i class="fas fa-route"></i>
                    <h3 class="mb-0">@Model.Select(r => r.Trip).Distinct().Count()</h3>
                    <p class="mb-0">Trip Reviewed</p>
                </div>
            </div>
        </div>

        <!-- Filter and Sort Options -->
        <div class="card border-0 shadow-sm mb-4">
            <div class="card-body py-3">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="input-group">
                            <span class="input-group-text border-0 bg-light">
                                <i class="fas fa-search text-muted"></i>
                            </span>
                            <input type="text" id="searchInput" class="form-control border-0 bg-light"
                                placeholder="Search reviews by route or comment...">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select id="ratingFilter" class="form-select border-0 bg-light">
                            <option value="">All Ratings</option>
                            <option value="5">5 Stars</option>
                            <option value="4">4 Stars</option>
                            <option value="3">3 Stars</option>
                            <option value="2">2 Stars</option>
                            <option value="1">1 Star</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <select id="sortBy" class="form-select border-0 bg-light">
                            <option value="date-desc">Latest First</option>
                            <option value="date-asc">Oldest First</option>
                            <option value="rating-desc">Highest Rating</option>
                            <option value="rating-asc">Lowest Rating</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>

        <!-- Reviews Grid -->
        <div class="row row-cols-1 row-cols-md-2 row-cols-xl-4 g-4" id="reviewsContainer">
            @foreach (var rating in Model)
            {
                <div class="col review-item" data-rating="@rating.TripRating"
                    data-route="@rating.Trip.Route.StartLocation.Name @rating.Trip.Route.DestinationLocation.Name"
                    data-comment="@rating.Comment" data-date="@rating.Trip.DepartureTime.ToString("yyyy-MM-dd")">
                    <div class="review-card card h-100 border-0 shadow-sm" style="min-width: 350x;">
                        <!-- Route Header -->
                        <div class="card-header border-0 bg-gradient-primary text-white">
                            <div class="d-flex align-items-center justify-content-between">
                                <div class="route-info">
                                    <h6 class="mb-0 fw-bold">
                                        <i class="fas fa-map-marker-alt me-1"></i>
                                        @rating.Trip.Route.StartLocation.Name
                                    </h6>
                                    <div class="route-arrow text-center my-1">
                                        <i class="fas fa-arrow-down"></i>
                                    </div>
                                    <h6 class="mb-0 fw-bold">
                                        <i class="fas fa-flag-checkered me-1"></i>
                                        @rating.Trip.Route.DestinationLocation.Name
                                    </h6>
                                </div>
                                <div
                                    class="rating-badge d-flex flex-column d-md-none align-items-center justify-content-center">
                                    <span class="text-white text-center fw-semibold mb-1">Your Rating</span>
                                    <div class="rating-circle bg-white text-dark fw-bold">
                                        @rating.TripRating <i class="fas fa-star text-warning"></i>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Card Body -->
                        <div class="card-body">
                            <!-- Trip Details -->
                            <div class="trip-details mb-3">
                                <div class="detail-item">
                                    <i class="fas fa-calendar-alt text-primary me-2"></i>
                                    <strong>Trip Date:</strong>
                                    <span class="ms-1">@rating.Trip.DepartureTime.ToString("MMM dd, yyyy")</span>
                                </div>
                                <div class="detail-item mt-1">
                                    <i class="fas fa-clock text-primary me-2"></i>
                                    <strong>Departure:</strong>
                                    <span class="ms-1">@rating.Trip.DepartureTime.ToString("HH:mm")</span>
                                </div>
                            </div>

                            <!-- Star Rating Display -->
                            <div class="star-rating mb-2 d-md-block d-none">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= rating.TripRating)
                                    {
                                        <i class="fas fa-star text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="far fa-star text-muted"></i>
                                    }
                                }
                                <span class="ms-2 text-muted">(@rating.TripRating/10)</span>
                            </div>

                            <!-- Comment -->
                            @if (!string.IsNullOrWhiteSpace(rating.Comment))
                            {
                                <div class="comment-section">
                                    <h6 class="text-primary mb-2">
                                        <i class="fas fa-comment me-1"></i>
                                        Your Review
                                    </h6>
                                    <p class="comment-text text-muted">
                                        "@rating.Comment"
                                    </p>
                                </div>
                            }
                        </div>

                        <!-- Card Footer -->
                        <div class="card-footer border-0 bg-light">
                            <div class="d-flex gap-2">
                                <a href="@Url.Action("Details", new { id = rating.Id })"
                                    class="btn btn-outline-primary btn-sm flex-fill">
                                    <i class="fas fa-eye me-1"></i>
                                    View Details
                                </a>
                                <a href="@Url.Action("Edit", new { id = rating.Id })" class="btn btn-outline-secondary btn-sm">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" class="btn btn-outline-danger btn-sm"
                                    onclick="confirmDelete(@rating.Id, '@rating.Trip.Route.StartLocation.Name', '@rating.Trip.Route.DestinationLocation.Name')">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Load More Button (if pagination is needed) -->
        <div class="text-center mt-5">
            <button class="btn btn-outline-primary btn-lg" id="loadMoreBtn" style="display: none;">
                <i class="fas fa-chevron-down me-2"></i>
                Load More Reviews
            </button>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0 bg-danger text-white">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Are you sure you want to delete your review for:</p>
                <div class="alert alert-light border">
                    <strong id="deleteRouteInfo"></strong>
                </div>
                <p class="text-muted small mb-0">This action cannot be undone.</p>
            </div>
            <div class="modal-footer border-0">
                <form asp-action="DeleteConfirmed" method="post">
                    <input type="text" name="id" id="ratingId" value="" hidden />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button role="button" type="submit" id="confirmDeleteBtn" class="btn btn-danger"><i
                            class="fas fa-trash-alt me-1"></i>
                        Delete Review</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Custom Styles */
        .bg-gradient-primary {
            background: linear-gradient(135deg, #007bff, #0056b3);
        }

        .alert-gradient-warning {
            background: linear-gradient(135deg, #fff3cd, #ffeaa7);
            border-left: 4px solid #ffc107;
        }

        .alert-icon {
            background: rgba(255, 193, 7, 0.2);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .review-card {
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .review-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15) !important;
        }

        .route-arrow {
            font-size: 0.8rem;
            opacity: 0.8;
        }

        .rating-circle {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.1rem;
        }

        .detail-item {
            font-size: 0.9rem;
        }

        .star-rating {
            font-size: 1.1rem;
        }

        .comment-text {
            font-style: italic;
            line-height: 1.6;
            background: rgba(0, 123, 255, 0.05);
            padding: 0.75rem;
            border-radius: 8px;
            border-left: 3px solid #007bff;
        }

        .empty-state {
            padding: 3rem 1rem;
        }

        .empty-state i {
            opacity: 0.5;
        }

        /* Filter and Search Animations */
        .review-item {
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

        .review-item.hidden {
            opacity: 0;
            transform: scale(0.9);
            height: 0;
            overflow: hidden;
            margin: 0;
            padding: 0;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Check for unrated trips
            checkUnratedTrips();

            // Initialize filters
            initializeFilters();
        });

        function checkUnratedTrips() {
            const userId = '@User.FindFirst(ClaimTypes.NameIdentifier)?.Value.ToString()';
            if (!userId) return;

            $.ajax({
                url: `${window.location.origin}/api/ratings/has-unrated-trips/${userId}`,
                type: 'GET',
                success: function (response) {
                    if (response.success && response.data.length > 0) {
                        $('#unratedTripsAlert').fadeIn();
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching unrated trips:', error);
                }
            });
        }

        function initializeFilters() {
            const searchInput = $('#searchInput');
            const ratingFilter = $('#ratingFilter');
            const sortBy = $('#sortBy');

            // Search functionality
            searchInput.on('input', function () {
                filterReviews();
            });

            // Rating filter
            ratingFilter.on('change', function () {
                filterReviews();
            });

            // Sort functionality
            sortBy.on('change', function () {
                sortReviews();
            });
        }

        function filterReviews() {
            const searchTerm = $('#searchInput').val().toLowerCase();
            const ratingFilter = $('#ratingFilter').val();

            $('.review-item').each(function () {
                const $item = $(this);
                const route = $item.data('route').toLowerCase();
                const comment = $item.data('comment').toLowerCase();
                const rating = $item.data('rating').toString();

                const matchesSearch = !searchTerm ||
                    route.includes(searchTerm) ||
                    comment.includes(searchTerm);

                const matchesRating = !ratingFilter || rating === ratingFilter;

                if (matchesSearch && matchesRating) {
                    $item.removeClass('hidden');
                } else {
                    $item.addClass('hidden');
                }
            });
        }

        function sortReviews() {
            const sortBy = $('#sortBy').val();
            const container = $('#reviewsContainer');
            const items = container.children('.review-item').get();

            items.sort(function (a, b) {
                const $a = $(a);
                const $b = $(b);

                switch (sortBy) {
                    case 'date-desc':
                        return new Date($b.data('date')) - new Date($a.data('date'));
                    case 'date-asc':
                        return new Date($a.data('date')) - new Date($b.data('date'));
                    case 'rating-desc':
                        return $b.data('rating') - $a.data('rating');
                    case 'rating-asc':
                        return $a.data('rating') - $b.data('rating');
                    default:
                        return 0;
                }
            });

            container.empty().append(items);
        }

        function confirmDelete(ratingId, startLocation, destinationLocation) {
            console.log(ratingId)
            $('#ratingId').val(ratingId);
            console.log($('#ratingId').val());
            $('#deleteRouteInfo').text(`${startLocation} → ${destinationLocation}`);
            $('#deleteConfirmationModal').modal('show');
        }
    </script>
}